name: "Фикс "

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Версия релиза для фикса'
        required: true
        type: string

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Скачать код"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
      - name: "Установить Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: "Установить зависимости"
        run: npm ci
      - name: "Запустить линтер"
        run: npm run lint
      - name: "Запустить тесты"
        run: npm run test

  build-and-push-fix:
    needs: lint-and-test
    runs-on: ubuntu-latest
    outputs:
      fix-tag: ${{ steps.set-fix-tag.outputs.tag }}
    steps:
      - name: "Скачать код"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0
          
      - name: "Установить тег фикса"
        id: set-fix-tag
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_NUMBER=${{ github.run_number }}
          FIX_TAG="${VERSION}_fix${FIX_NUMBER}"
          echo "tag=$FIX_TAG" >> $GITHUB_OUTPUT
          
      - name: "Сборка Docker образа"
        run: |
          FIX_TAG=${{ steps.set-fix-tag.outputs.tag }}
          docker build -t shri-app:$FIX_TAG .
          
      - name: "Авторизация в Container Registry"
        run: |
          printf '%s\n' '${{ secrets.YC_SERVICE_ACCOUNT_KEY }}' | sed 's/\\\\n/\n/g' > key.json
          
          if jq empty key.json 2>/dev/null; then
            # JSON ключ валиден
            :
          else
            # JSON невалиден, пропускаем Container Registry
            rm -f key.json
            exit 0
          fi
          
          cat key.json | docker login \
            --username json_key \
            --password-stdin \
            cr.yandex || {
            # Авторизация не удалась, пропускаем Container Registry
            rm -f key.json
            exit 0
          }
          
          rm -f key.json
          # Успешно авторизовались в Container Registry
          
      - name: "Тегирование для Container Registry"
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_TAG=${{ steps.set-fix-tag.outputs.tag }}
          REGISTRY_ID="${{ secrets.YC_REGISTRY_ID }}"
          
          # Тегируем образы для Container Registry
          docker tag shri-app:$FIX_TAG cr.yandex/$REGISTRY_ID/app:$FIX_TAG
          docker tag shri-app:$FIX_TAG cr.yandex/$REGISTRY_ID/app:${VERSION}_latest
          
      - name: "Загрузка в Container Registry"
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_TAG=${{ steps.set-fix-tag.outputs.tag }}
          REGISTRY_ID="${{ secrets.YC_REGISTRY_ID }}"
          
          # Загружаем образы в Container Registry
          docker push cr.yandex/$REGISTRY_ID/app:$FIX_TAG || true
          docker push cr.yandex/$REGISTRY_ID/app:${VERSION}_latest || true

  create-fix-tag:
    needs: [build-and-push-fix]
    runs-on: ubuntu-latest
    steps:
      - name: "Скачать код"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0
      - name: "Создать Git тег для фикса"
        run: |
          FIX_TAG=${{ needs.build-and-push-fix.outputs.fix-tag }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $FIX_TAG
          git push origin $FIX_TAG

  add-issue-comment:
    needs: [build-and-push-fix, create-fix-tag]
    runs-on: ubuntu-latest
    steps:
      - name: "Скачать код"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0
          
      - name: "Получить список коммитов от предыдущего тега"
        id: get-commits
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          
          # Ищем предыдущий релизный или фикс тег для этой версии
          PREV_TAG=$(git tag -l | grep -E "^${VERSION}(_fix[0-9]+)?$" | sort -V | tail -2 | head -1)
          
          if [ -z "$PREV_TAG" ]; then
            # Если нет предыдущих фикс тегов, ищем базовый релизный тег
            PREV_TAG=$(git tag -l | grep -E "^${VERSION}$" | head -1)
          fi
          
          if [ -z "$PREV_TAG" ]; then
            # Первый фикс - берём все коммиты в релизной ветке
            COMMITS=$(git log --oneline --pretty=format:"- %s (%h)")
          else
            # Предыдущий тег: $PREV_TAG
            COMMITS=$(git log ${PREV_TAG}..HEAD --oneline --pretty=format:"- %s (%h)")
          fi
          
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: "Найти Issue релиза"
        id: find-issue
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          
          # Ищем Issue с заголовком "Релиз <версия>"
          ISSUE_NUMBER=$(gh issue list --state all --limit 100 --json number,title | jq -r --arg title "Релиз $VERSION" '.[] | select(.title == $title) | .number')
          
          if [ -n "$ISSUE_NUMBER" ]; then
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "issue_number=" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: "Добавить комментарий в Issue"
        if: steps.find-issue.outputs.issue_number != ''
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_TAG=${{ needs.build-and-push-fix.outputs.fix-tag }}
          DATE=$(date '+%Y-%m-%d %H:%M:%S')
          AUTHOR="${{ github.actor }}"
          ISSUE_NUMBER=${{ steps.find-issue.outputs.issue_number }}
          
          cat > comment_body.md << EOF
          ## Фикс $FIX_TAG
          
          **Дата фикса:** $DATE  
          **Автор фикса:** @$AUTHOR  
          
          ### Docker образ:
          \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:$FIX_TAG\`
          
          ### Изменения в фиксе:
          ${{ steps.get-commits.outputs.commits }}
          EOF
          
          gh issue comment $ISSUE_NUMBER --body-file comment_body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}