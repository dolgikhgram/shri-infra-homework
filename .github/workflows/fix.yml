name: "–§–∏–∫—Å "

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: '–í–µ—Ä—Å–∏—è —Ä–µ–ª–∏–∑–∞ –¥–ª—è —Ñ–∏–∫—Å–∞'
        required: true
        type: string

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: "–°–∫–∞—á–∞—Ç—å –∫–æ–¥"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
      - name: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
        run: npm ci
      - name: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä"
        run: npm run lint
      - name: "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
        run: npm run test

  build-and-push-fix:
    needs: lint-and-test
    runs-on: ubuntu-latest
    outputs:
      fix-tag: ${{ steps.set-fix-tag.outputs.tag }}
    steps:
      - name: "–°–∫–∞—á–∞—Ç—å –∫–æ–¥"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0
          
      - name: "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–≥ —Ñ–∏–∫—Å–∞"
        id: set-fix-tag
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_NUMBER=${{ github.run_number }}
          FIX_TAG="${VERSION}_fix${FIX_NUMBER}"
          echo "tag=$FIX_TAG" >> $GITHUB_OUTPUT
          echo "–¢–µ–≥ —Ñ–∏–∫—Å–∞: $FIX_TAG"
          
      - name: "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞"
        run: |
          FIX_TAG=${{ steps.set-fix-tag.outputs.tag }}
          docker build -t shri-app:$FIX_TAG .
          echo "–û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —Å —Ç–µ–≥–æ–º: $FIX_TAG"
          
      - name: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Container Registry"
        run: |
          printf '%s\n' '${{ secrets.YC_SERVICE_ACCOUNT_KEY }}' | sed 's/\\\\n/\n/g' > key.json
          
          if jq empty key.json 2>/dev/null; then
            echo "‚úÖ JSON –∫–ª—é—á –≤–∞–ª–∏–¥–µ–Ω"
          else
            echo "‚ùå JSON –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º Container Registry"
            rm -f key.json
            exit 0
          fi
          
          cat key.json | docker login \
            --username json_key \
            --password-stdin \
            cr.yandex || {
            echo "‚ö†Ô∏è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º Container Registry"
            rm -f key.json
            exit 0
          }
          
          rm -f key.json
          echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ Container Registry"
          
      - name: "–¢–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Container Registry"
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_TAG=${{ steps.set-fix-tag.outputs.tag }}
          REGISTRY_ID="${{ secrets.YC_REGISTRY_ID }}"
          
          echo "–¢–µ–≥–∏—Ä—É–µ–º –æ–±—Ä–∞–∑—ã –¥–ª—è Container Registry..."
          docker tag shri-app:$FIX_TAG cr.yandex/$REGISTRY_ID/app:$FIX_TAG
          docker tag shri-app:$FIX_TAG cr.yandex/$REGISTRY_ID/app:${VERSION}_latest
          
          echo "‚úÖ –û–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Ç–µ–≥–∏—Ä–æ–≤–∞–Ω—ã:"
          echo "  - cr.yandex/$REGISTRY_ID/app:$FIX_TAG" 
          echo "  - cr.yandex/$REGISTRY_ID/app:${VERSION}_latest"
          
      - name: "–ó–∞–≥—Ä—É–∑–∫–∞ –≤ Container Registry"
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_TAG=${{ steps.set-fix-tag.outputs.tag }}
          REGISTRY_ID="${{ secrets.YC_REGISTRY_ID }}"
          
          echo "–ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞–∑—ã –≤ Container Registry..."
          
          if docker push cr.yandex/$REGISTRY_ID/app:$FIX_TAG; then
            echo "‚úÖ –û–±—Ä–∞–∑ cr.yandex/$REGISTRY_ID/app:$FIX_TAG –∑–∞–≥—Ä—É–∂–µ–Ω"
          else
            echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—Ä–∞–∑ —Å —Ç–µ–≥–æ–º $FIX_TAG"
          fi
          
          if docker push cr.yandex/$REGISTRY_ID/app:${VERSION}_latest; then
            echo "‚úÖ –û–±—Ä–∞–∑ cr.yandex/$REGISTRY_ID/app:${VERSION}_latest –∑–∞–≥—Ä—É–∂–µ–Ω"
          else
            echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å latest –æ–±—Ä–∞–∑"
          fi

  create-fix-tag:
    needs: [build-and-push-fix]
    runs-on: ubuntu-latest
    steps:
      - name: "–°–∫–∞—á–∞—Ç—å –∫–æ–¥"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0
      - name: "–°–æ–∑–¥–∞—Ç—å Git —Ç–µ–≥ –¥–ª—è —Ñ–∏–∫—Å–∞"
        run: |
          FIX_TAG=${{ needs.build-and-push-fix.outputs.fix-tag }}
          echo "–°–æ–∑–¥–∞—é —Ç–µ–≥: $FIX_TAG"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $FIX_TAG
          git push origin $FIX_TAG
          echo "–¢–µ–≥ $FIX_TAG —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"

  add-issue-comment:
    needs: [build-and-push-fix, create-fix-tag]
    runs-on: ubuntu-latest
    steps:
      - name: "–°–∫–∞—á–∞—Ç—å –∫–æ–¥"
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}
          fetch-depth: 0
          
      - name: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∏—Ç–æ–≤ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–µ–≥–∞"
        id: get-commits
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          echo "–ü–æ–ª—É—á–∞—é –∫–æ–º–º–∏—Ç—ã –¥–ª—è —Ñ–∏–∫—Å–∞ –≤–µ—Ä—Å–∏–∏ $VERSION"
          
          # –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–ª–∏–∑–Ω—ã–π –∏–ª–∏ —Ñ–∏–∫—Å —Ç–µ–≥ –¥–ª—è —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏
          PREV_TAG=$(git tag -l | grep -E "^${VERSION}(_fix[0-9]+)?$" | sort -V | tail -2 | head -1)
          
          if [ -z "$PREV_TAG" ]; then
            # –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ñ–∏–∫—Å —Ç–µ–≥–æ–≤, –∏—â–µ–º –±–∞–∑–æ–≤—ã–π —Ä–µ–ª–∏–∑–Ω—ã–π —Ç–µ–≥
            PREV_TAG=$(git tag -l | grep -E "^${VERSION}$" | head -1)
          fi
          
          if [ -z "$PREV_TAG" ]; then
            echo "–ü–µ—Ä–≤—ã–π —Ñ–∏–∫—Å - –±–µ—Ä—ë–º –≤—Å–µ –∫–æ–º–º–∏—Ç—ã –≤ —Ä–µ–ª–∏–∑–Ω–æ–π –≤–µ—Ç–∫–µ"
            COMMITS=$(git log --oneline --pretty=format:"- %s (%h)")
          else
            echo "–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥: $PREV_TAG"
            COMMITS=$(git log ${PREV_TAG}..HEAD --oneline --pretty=format:"- %s (%h)")
          fi
          
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: "–ù–∞–π—Ç–∏ Issue —Ä–µ–ª–∏–∑–∞"
        id: find-issue
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          echo "–ò—â—É Issue –¥–ª—è —Ä–µ–ª–∏–∑–∞ $VERSION"
          
          # –ò—â–µ–º Issue —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º "–†–µ–ª–∏–∑ <–≤–µ—Ä—Å–∏—è>"
          ISSUE_NUMBER=$(gh issue list --state all --limit 100 --json number,title | jq -r --arg title "–†–µ–ª–∏–∑ $VERSION" '.[] | select(.title == $title) | .number')
          
          if [ -n "$ISSUE_NUMBER" ]; then
            echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
            echo "–ù–∞–π–¥–µ–Ω Issue #$ISSUE_NUMBER –¥–ª—è —Ä–µ–ª–∏–∑–∞ $VERSION"
          else
            echo "issue_number=" >> $GITHUB_OUTPUT
            echo "Issue –¥–ª—è —Ä–µ–ª–∏–∑–∞ $VERSION –Ω–µ –Ω–∞–π–¥–µ–Ω"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: "–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ Issue"
        if: steps.find-issue.outputs.issue_number != ''
        run: |
          VERSION=${{ github.event.inputs.release_version }}
          FIX_TAG=${{ needs.build-and-push-fix.outputs.fix-tag }}
          DATE=$(date '+%Y-%m-%d %H:%M:%S')
          AUTHOR="${{ github.actor }}"
          ISSUE_NUMBER=${{ steps.find-issue.outputs.issue_number }}
          
          cat > comment_body.md << EOF
          ## üîß –§–∏–∫—Å $FIX_TAG
          
          **–î–∞—Ç–∞ —Ñ–∏–∫—Å–∞:** $DATE  
          **–ê–≤—Ç–æ—Ä —Ñ–∏–∫—Å–∞:** @$AUTHOR  
          
          ### Docker –æ–±—Ä–∞–∑:
          \`cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app:$FIX_TAG\`
          
          ### –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∏–∫—Å–µ:
          ${{ steps.get-commits.outputs.commits }}
          EOF
          
          echo "–î–æ–±–∞–≤–ª—è—é –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ Issue #$ISSUE_NUMBER –¥–ª—è —Ñ–∏–∫—Å–∞ $FIX_TAG"
          gh issue comment $ISSUE_NUMBER --body-file comment_body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}